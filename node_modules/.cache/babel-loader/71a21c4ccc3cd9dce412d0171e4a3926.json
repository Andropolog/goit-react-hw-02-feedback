{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Projects/goit-react-hw-02-feedback/src/components/Feedback/Feedback.js\";\nimport React, { Component } from 'react';\nimport Section from './Section/Section';\nimport Statistics from './Statistics/Statistics';\nimport Notification from './Notification/Notification';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Feedback extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.countTotalFeedback = () => {\n      const {\n        good,\n        neutral,\n        bad\n      } = this.state;\n      return good + neutral + bad;\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      const {\n        good\n      } = this.state;\n      return `${Math.floor(good / this.countTotalFeedback() * 100)}%`;\n    };\n\n    this.updateState = name => {\n      this.setState(prevState => ({\n        [name]: prevState[name] + 1\n      }));\n    };\n\n    this.handleFeedback = e => {\n      const actionName = e.target.name;\n      this.updateState(actionName);\n    };\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const options = Object.keys(this.state);\n    return /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Please leave feedback\",\n      children: [/*#__PURE__*/_jsxDEV(FeedbackOptions, {\n        options: options,\n        onLeaveFeedback: this.handleFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"statistics\",\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), this.countTotalFeedback() ? /*#__PURE__*/_jsxDEV(Statistics, {\n        good: good,\n        neutral: neutral,\n        bad: bad,\n        total: this.countTotalFeedback(),\n        positivePercentage: this.countPositiveFeedbackPercentage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n        message: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Projects/goit-react-hw-02-feedback/src/components/Feedback/Feedback.js"],"names":["React","Component","Section","Statistics","Notification","FeedbackOptions","Feedback","state","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","updateState","name","setState","prevState","handleFeedback","e","actionName","target","render","options","Object","keys"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;;AAEA,eAAe,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC9CM,KAD8C,GACtC;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADsC;;AAAA,SAO9CC,kBAP8C,GAOzB,MAAM;AACzB,YAAM;AAAEH,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA;AAAjB,UAAyB,KAAKH,KAApC;AACA,aAAOC,IAAI,GAAGC,OAAP,GAAiBC,GAAxB;AACD,KAV6C;;AAAA,SAY9CE,+BAZ8C,GAYZ,MAAM;AACtC,YAAM;AAAEJ,QAAAA;AAAF,UAAW,KAAKD,KAAtB;AACA,aAAQ,GAAEM,IAAI,CAACC,KAAL,CAAYN,IAAI,GAAG,KAAKG,kBAAL,EAAR,GAAqC,GAAhD,CAAqD,GAA/D;AACD,KAf6C;;AAAA,SAiB9CI,WAjB8C,GAiBhCC,IAAI,IAAI;AACpB,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1B,SAACF,IAAD,GAAQE,SAAS,CAACF,IAAD,CAAT,GAAkB;AADA,OAAL,CAAvB;AAGD,KArB6C;;AAAA,SAuB9CG,cAvB8C,GAuB7BC,CAAC,IAAI;AACpB,YAAMC,UAAU,GAAGD,CAAC,CAACE,MAAF,CAASN,IAA5B;AACA,WAAKD,WAAL,CAAiBM,UAAjB;AACD,KA1B6C;AAAA;;AA4B9CE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACA,UAAMiB,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKnB,KAAjB,CAAhB;AAEA,wBACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,uBAAf;AAAA,8BACE,QAAC,eAAD;AACE,QAAA,OAAO,EAAEiB,OADX;AAEE,QAAA,eAAe,EAAE,KAAKL;AAFxB;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,EAQG,KAAKR,kBAAL,kBACC,QAAC,UAAD;AACE,QAAA,IAAI,EAAEH,IADR;AAEE,QAAA,OAAO,EAAEC,OAFX;AAGE,QAAA,GAAG,EAAEC,GAHP;AAIE,QAAA,KAAK,EAAE,KAAKC,kBAAL,EAJT;AAKE,QAAA,kBAAkB,EAAE,KAAKC,+BAAL;AALtB;AAAA;AAAA;AAAA;AAAA,cADD,gBASC,QAAC,YAAD;AAAc,QAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AAtD6C","sourcesContent":["import React, { Component } from 'react';\nimport Section from './Section/Section';\nimport Statistics from './Statistics/Statistics';\nimport Notification from './Notification/Notification';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\n\nexport default class Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return `${Math.floor((good / this.countTotalFeedback()) * 100)}%`;\n  };\n\n  updateState = name => {\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  handleFeedback = e => {\n    const actionName = e.target.name;\n    this.updateState(actionName);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const options = Object.keys(this.state);\n\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={options}\n          onLeaveFeedback={this.handleFeedback}\n        />\n\n        <h3 className=\"statistics\">Statistics</h3>\n\n        {this.countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}