{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Projects/goit-react-hw-02-feedback/src/components/Feedback/Statistics/Statistics.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Good: \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Neutral: \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Bad: \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total: \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Positive feedback: \", positivePercentage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Statistics;\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string.isRequired\n};\nexport default Statistics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/Users/mac/Projects/goit-react-hw-02-feedback/src/components/Feedback/Statistics/Statistics.js"],"names":["React","PropTypes","Statistics","good","neutral","bad","total","positivePercentage","propTypes","number","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,GAAjB;AAAsBC,EAAAA,KAAtB;AAA6BC,EAAAA;AAA7B,CAAD,KAAuD;AACxE,sBACE;AAAA,4BACE;AAAA,2BAAUJ,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BAAaC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,0BAASC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,4BAAWC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,wCAAuBC,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD,CAVD;;KAAML,U;AAYNA,UAAU,CAACM,SAAX,GAAuB;AACrBL,EAAAA,IAAI,EAAEF,SAAS,CAACQ,MAAV,CAAiBC,UADF;AAErBN,EAAAA,OAAO,EAAEH,SAAS,CAACQ,MAAV,CAAiBC,UAFL;AAGrBL,EAAAA,GAAG,EAAEJ,SAAS,CAACQ,MAAV,CAAiBC,UAHD;AAIrBJ,EAAAA,KAAK,EAAEL,SAAS,CAACQ,MAAV,CAAiBC,UAJH;AAKrBH,EAAAA,kBAAkB,EAAEN,SAAS,CAACU,MAAV,CAAiBD;AALhB,CAAvB;AAQA,eAAeR,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage}</p>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n\nexport default Statistics;"]},"metadata":{},"sourceType":"module"}